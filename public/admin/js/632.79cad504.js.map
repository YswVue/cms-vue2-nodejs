{"version":3,"file":"js/632.79cad504.js","mappings":"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","sources":["webpack://vue2-cms-admin/./src/views/Auth/Operation.vue","webpack://vue2-cms-admin/src/views/Auth/Operation.vue","webpack://vue2-cms-admin/./src/views/Auth/Operation.vue?416c","webpack://vue2-cms-admin/./src/views/Auth/Operation.vue?dc5f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"list_head\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"按钮管理\")]),_c('el-button',{directives:[{name:\"permission\",rawName:\"v-permission\",value:('system:operation:create'),expression:\"'system:operation:create'\"}],attrs:{\"type\":\"primary\",\"icon\":\"el-icon-circle-plus-outline\",\"plain\":\"\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.insertDialogVisible = true}}},[_vm._v(\"添加按钮\")])],1),_c('el-table',{attrs:{\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"prop\":\"operation_id\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"prop\":\"operation_name\",\"label\":\"操作名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"operation_code\",\"label\":\"操作代码\"}}),_c('el-table-column',{attrs:{\"prop\":\"operation_description\",\"label\":\"操作描述\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{directives:[{name:\"permission\",rawName:\"v-permission\",value:('system:operation:edit'),expression:\"'system:operation:edit'\"}],attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"plain\":\"\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.openEditDialog(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{directives:[{name:\"permission\",rawName:\"v-permission\",value:('system:operation:remove'),expression:\"'system:operation:remove'\"}],attrs:{\"plain\":\"\",\"size\":\"mini\",\"icon\":\"el-icon-delete\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleRemove(scope.row.operation_id, scope.$index)}}},[_vm._v(\"删除\")])]}}])})],1),_c('el-dialog',{attrs:{\"title\":\"添加按钮\",\"visible\":_vm.insertDialogVisible},on:{\"update:visible\":function($event){_vm.insertDialogVisible=$event},\"close\":function($event){return _vm.handleCloseDialog('insertForm')}}},[_c('el-form',{ref:\"insertForm\",attrs:{\"model\":_vm.insertForm,\"rules\":_vm.rules,\"status-icon\":\"\",\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"操作名称\",\"prop\":\"operation_name\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(_vm.insertForm.operation_name),callback:function ($$v) {_vm.$set(_vm.insertForm, \"operation_name\", $$v)},expression:\"insertForm.operation_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"操作代码\",\"prop\":\"operation_code\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(_vm.insertForm.operation_code),callback:function ($$v) {_vm.$set(_vm.insertForm, \"operation_code\", $$v)},expression:\"insertForm.operation_code\"}})],1),_c('el-form-item',{attrs:{\"label\":\"操作描述\",\"prop\":\"operation_description\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(_vm.insertForm.operation_description),callback:function ($$v) {_vm.$set(_vm.insertForm, \"operation_description\", $$v)},expression:\"insertForm.operation_description\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.insertDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleInsert}},[_vm._v(\"添 加\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"编辑按钮\",\"visible\":_vm.editDialogVisible},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":function($event){return _vm.handleCloseDialog('editForm')}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.rules,\"status-icon\":\"\",\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"操作名称\",\"prop\":\"operation_name\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(_vm.editForm.operation_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"operation_name\", $$v)},expression:\"editForm.operation_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"操作代码\",\"prop\":\"operation_code\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(_vm.editForm.operation_code),callback:function ($$v) {_vm.$set(_vm.editForm, \"operation_code\", $$v)},expression:\"editForm.operation_code\"}})],1),_c('el-form-item',{attrs:{\"label\":\"操作描述\",\"prop\":\"operation_description\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(_vm.editForm.operation_description),callback:function ($$v) {_vm.$set(_vm.editForm, \"operation_description\", $$v)},expression:\"editForm.operation_description\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleEdit}},[_vm._v(\"保 存\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <el-card class=\"box-card\">\r\n        <div class=\"list_head\" slot=\"header\">\r\n            <span>按钮管理</span>\r\n            <el-button v-permission=\"'system:operation:create'\" @click=\"insertDialogVisible = true\" type=\"primary\"\r\n                icon=\"el-icon-circle-plus-outline\" plain size=\"mini\">添加按钮</el-button>\r\n        </div>\r\n        <el-table :data=\"tableData\">\r\n            <el-table-column prop=\"operation_id\" label=\"#\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"operation_name\" label=\"操作名称\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"operation_code\" label=\"操作代码\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"operation_description\" label=\"操作描述\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n                <!-- template插槽 内部放复杂结构 必须加slot-scope=\"scope\"-->\r\n                <template slot-scope=\"scope\">\r\n                    <el-button v-permission=\"'system:operation:edit'\" @click=\"openEditDialog(scope.row)\" type=\"primary\"\r\n                        icon=\"el-icon-edit\" plain size=\"mini\">编辑</el-button>\r\n                    <!-- scope.$index 用来获取索引==>element框架文档中得知 -->\r\n                    <el-button v-permission=\"'system:operation:remove'\"\r\n                        @click=\"handleRemove(scope.row.operation_id, scope.$index)\" plain size=\"mini\" icon=\"el-icon-delete\"\r\n                        type=\"danger\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 下面两个弹窗结构是相同的，可以封装成一个，但是耦合度高，不易于阅读 -->\r\n        <!-- 添加 -->\r\n        <el-dialog title=\"添加按钮\" :visible.sync=\"insertDialogVisible\" @close=\"handleCloseDialog('insertForm')\">\r\n            <el-form :model=\"insertForm\" :rules=\"rules\" ref=\"insertForm\" status-icon label-width=\"100px\">\r\n                <el-form-item label=\"操作名称\" prop=\"operation_name\">\r\n                    <el-input type=\"text\" v-model=\"insertForm.operation_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"操作代码\" prop=\"operation_code\">\r\n                    <el-input type=\"text\" v-model=\"insertForm.operation_code\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"操作描述\" prop=\"operation_description\">\r\n                    <el-input type=\"text\" v-model=\"insertForm.operation_description\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"insertDialogVisible = false\">取 消</el-button>\r\n                <!-- scope.row 为这一行的数据 -->\r\n                <el-button @click=\"handleInsert\" type=\"primary\">添 加</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 编辑 -->\r\n        <el-dialog title=\"编辑按钮\" :visible.sync=\"editDialogVisible\" @close=\"handleCloseDialog('editForm')\">\r\n            <el-form :model=\"editForm\" :rules=\"rules\" ref=\"editForm\" status-icon label-width=\"100px\">\r\n                <el-form-item label=\"操作名称\" prop=\"operation_name\">\r\n                    <el-input type=\"text\" v-model=\"editForm.operation_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"操作代码\" prop=\"operation_code\">\r\n                    <el-input type=\"text\" v-model=\"editForm.operation_code\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"操作描述\" prop=\"operation_description\">\r\n                    <el-input type=\"text\" v-model=\"editForm.operation_description\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button @click=\"handleEdit\" type=\"primary\">保 存</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { Operation } from 'slate';\r\nimport { mapState, mapActions, mapMutations, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n    // name属性 -- 帮助快速搜索组件\r\n    name: \"List\",\r\n    data() {\r\n        return {\r\n            // 插入标签弹窗\r\n            insertDialogVisible: false,\r\n            insertForm: {\r\n                operation_name: '',\r\n                operation_code: '',\r\n                operation_description: '',\r\n            },\r\n            // 编辑标签弹窗\r\n            editDialogVisible: false,\r\n            editForm: {\r\n                operation_id: '',\r\n                operation_name: '',\r\n                operation_code: '',\r\n                operation_description: '',\r\n            },\r\n            // 缓存当前编辑的数据 -- 指针地址\r\n            current_data: '',\r\n            rules: {\r\n                operation_name: [\r\n                    { required: true, message: '请输入操作名称！', trigger: 'blur' },\r\n                ],\r\n                operation_code: [\r\n                    { required: true, message: '请输入操作代码！', trigger: 'blur' },\r\n                ],\r\n                operation_description: [\r\n                    { required: true, message: '请输入操作描述！', trigger: 'blur' },\r\n                ],\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.loadList();\r\n    },\r\n    computed: {\r\n        ...mapState('operation', ['tableData']),\r\n    },\r\n    methods: {\r\n        // 加载标签列表\r\n        ...mapActions('operation', ['loadList']),\r\n        // 添加标签\r\n        ...mapActions('operation', ['insertOperation']),\r\n        async handleInsert() {\r\n            // 通过$resfs 找到 insertForm\r\n            this.$refs.insertForm.validate(async (valid) => {\r\n                if (valid) {\r\n                    let { status, msg } = await this.insertOperation({ ...this.insertForm })\r\n                    if (status) {\r\n                        this.$message.success(msg);\r\n                        this.insertDialogVisible = false;\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        // dialog组件的事件方法 ===> 所以点击事件写在组件上 ==> 去除上次表单验证的效果\r\n        handleCloseDialog(formName) {\r\n            // this.$refs.this.insertForm.resetFields();\r\n            // 因为页面有两个表单，所以使用传参的方法。\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        // 打开编辑弹窗\r\n        openEditDialog(data) {\r\n            // 缓存 scope.row 的指针地址 ==> 所以 current_data 改变的话 ，data也会变。\r\n            this.current_data = data;\r\n            // 还原表单数据 ==> 把表单数据还原到 编辑弹窗 中。\r\n            // 此处浅拷贝 ==> 断开与表格的数据的双向绑定 ==> 不然修改时未点击保存，表格数据也会随之变化。\r\n            this.editForm = { ...data };\r\n            // 打开弹窗\r\n            this.editDialogVisible = true;\r\n        },\r\n        // 编辑标签\r\n        ...mapActions('operation', ['editOperation']),\r\n        async handleEdit() {\r\n            // 表单验证的第二种写法 ==> 参考 Element UI ==> validate中不传入参数(即回调函数)时\r\n            // 则会返回一个 promise ==> 可使用 try catch 捕获成功与失败 \r\n            try {\r\n                let valid = await this.$refs.editForm.validate();\r\n                if (valid) {\r\n                    let { status, msg } = await this.editOperation({ ...this.editForm });\r\n                    if (status) {\r\n                        // 更新视图\r\n                        Object.assign(this.current_data, this.editForm);\r\n                        // 关闭弹窗\r\n                        this.editDialogVisible = false;\r\n                        // 信息提示\r\n                        this.$message.success(msg);\r\n                    } else {\r\n                        this.$message.error(msg);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        // 删除标签\r\n        ...mapActions('operation', ['removeOperation']),\r\n        handleRemove(operation_id, index) {\r\n            // 查阅文档 -- $confirm 返回一个 promise 对象 ==> 所以用 .then .catch 分别捕获。\r\n            // 也可以 使用 async await ==> try catch 捕获\r\n            this.$confirm('此操作将永久删除该标签, 是否继续?', '确认删除', {\r\n                confirmButtonText: '删除',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(async () => {\r\n                // 删除标签 -- 需要 tag_id ==>在scope.row中 ==> 所以传一个参数,即tag_id\r\n                // 这是 delete 请求，id 是要求传入的参数\r\n                let { status, msg } = await this.removeOperation({ operation_id, index });\r\n                if (status) {\r\n                    // 信息提示 ==> this.$message.success(msg);\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: msg,\r\n                    });\r\n                } else {\r\n                    this.$message.error(msg);\r\n                }\r\n\r\n            }).catch(() => {\r\n                this.$message.info('已取消删除');\r\n            });\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.list_head {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Operation.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Operation.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Operation.vue?vue&type=template&id=fba7b71a&scoped=true&\"\nimport script from \"./Operation.vue?vue&type=script&lang=js&\"\nexport * from \"./Operation.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Operation.vue?vue&type=style&index=0&id=fba7b71a&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fba7b71a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","directives","name","rawName","value","expression","on","$event","insertDialogVisible","tableData","scopedSlots","_u","key","fn","scope","openEditDialog","row","handleRemove","operation_id","$index","handleCloseDialog","ref","insertForm","rules","model","operation_name","callback","$$v","$set","operation_code","operation_description","handleInsert","editDialogVisible","editForm","handleEdit","staticRenderFns","data","current_data","required","message","trigger","created","loadList","computed","mapState","methods","mapActions","$refs","validate","valid","status","msg","insertOperation","$message","success","formName","resetFields","editOperation","Object","assign","error","console","log","index","$confirm","confirmButtonText","cancelButtonText","type","then","removeOperation","catch","info","component"],"sourceRoot":""}